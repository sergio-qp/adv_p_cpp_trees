---
title: "datasetmakrrr"
author: "SQ"
date: "`r Sys.Date()`"
output: pdf_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r, include = FALSE}
library(tidyverse)
library(dplyr)
library(knitr)
library(data.table)

```

```{r, include = FALSE}
data = fread("SeoulBikeData.csv") %>% mutate
colnames(data)[2] <- "Count"
colnames(data)[4] <- "Temperature"
colnames(data)[5] <- "Humidity"
colnames(data)[8] <- "Dew"
colnames(data)

data$Temperature <- data$Temperature + 273


fdata = data[, -c(1,12,13,14) ]
fdata
colnames(fdata)<- c("Count", "Hour", "Temperature", "Humidity", "Wind_speed",
                    "Visibility_10m", "Dew", "Solar_Radiation",
                    "Rainfall_mm", "Snowfall_cm")
```


```{r, include = FALSE}
variables <- colnames(fdata)
no_predictors <- c("Wind_speed", "Dew", "Snowfall_cm", "Count") #,"Visibility_10m", "Count"
predictors <- setdiff(variables, no_predictors)
# Create the formula dynamically
formula <- as.formula(paste("Count ~", paste(predictors, collapse = " + ")))

# Fit the linear model
model <- lm(formula, data = fdata)
model
summary(model)
# 
# model2 <- lm(Count ~ Hour, data = data)
# model2
# summary(model2)
# 
# plot(data$Count, log(data$Temperature))
# smp = data[sample(nrow(data), 800), ]
# plot(smp$Count, log(smp$Temperature))
# 
# 
# mod3 = lm(Count~log(Temperature), data = data)
# summary(data$Temperature)
# sum(data$Temperature<0)
# summary(mod3)

```


```{r}
variables <- colnames(fdata)
no_predictors <- c("Count") #,"Visibility_10m", "Count"
predictors <- setdiff(variables, no_predictors)
# Create the formula dynamically
formula <- as.formula(paste("Count ~", paste(predictors, collapse = " + ")))

# Fit the linear model
model <- lm(formula, data = fdata)
model
summary(model)


library(leaps)
regs<- regsubsets(Count~., fdata)
reg_summary <- summary(regs)
round(reg_summary$adjr2,2)

```

```{r}
predictors <- c("Hour", "Temperature", "Humidity", "Solar_Radiation", "Rainfall_mm")
# Create the formula dynamically
formula <- as.formula(paste("Count ~", paste(predictors, collapse = " + ")))

# Fit the linear model
model <- lm(formula, data = fdata)
model
summary(model)

# Normailty
qqnorm(model$residuals)
qqline(model$residuals, col = "red")

# Homoscedasticty
plot(model$fitted.values, model$residuals, main = "Residuals vs Fitted", 
     xlab = "Fitted values", ylab = "Residuals")
abline(h = 0, col = "red")

# Independence
# Durbin-Watson test for autocorrelation
dwtest(model)


#   Arreglar Normalidad
#--------------------------
hist(sqrt(data$Count))

fdata$sqrt_count <- sqrt(fdata$Count)

predictors <- c("Hour", "Temperature", "Humidity", "Solar_Radiation", "Rainfall_mm")
# Create the formula dynamically
formula <- as.formula(paste("sqrt_count ~", paste(predictors, collapse = " + ")))

# Fit the linear model
model <- lm(formula, data = fdata)
model
summary(model)

qqnorm(model$residuals)
qqline(model$residuals, col = "red")
```

